#
#   http-windows-default.nmake -- Makefile to build Embedthis Http for windows
#

NAME                  = http
VERSION               = 8.0.2

OS                    = windows
PA                    = $(PROCESSOR_ARCHITECTURE)
!IF "$(PROFILE)" == ""
PROFILE               = default
!ENDIF


!IF "$(PA)" == "AMD64"
ARCH                  = x64
ENTRY                 = _DllMainCRTStartup
!ELSE
ARCH                  = x86
ENTRY                 = _DllMainCRTStartup@12
!ENDIF

!IF "$(CONFIG)" == ""
CONFIG                = $(OS)-$(ARCH)-$(PROFILE)
!ENDIF

!IF "$(BUILD)" == ""
BUILD                 = build\$(CONFIG)
!ENDIF

LBIN                  = $(BUILD)\bin

!IF "$(ME_COM_COMPILER)" == ""
ME_COM_COMPILER       = 1
!ENDIF
!IF "$(ME_COM_LIB)" == ""
ME_COM_LIB            = 1
!ENDIF
!IF "$(ME_COM_LINK)" == ""
ME_COM_LINK           = 1
!ENDIF
!IF "$(ME_COM_MATRIXSSL)" == ""
ME_COM_MATRIXSSL      = 0
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == ""
ME_COM_MBEDTLS        = 1
!ENDIF
!IF "$(ME_COM_MPR)" == ""
ME_COM_MPR            = 1
!ENDIF
!IF "$(ME_COM_NANOSSL)" == ""
ME_COM_NANOSSL        = 0
!ENDIF
!IF "$(ME_COM_OPENSSL)" == ""
ME_COM_OPENSSL        = 0
!ENDIF
!IF "$(ME_COM_OSDEP)" == ""
ME_COM_OSDEP          = 1
!ENDIF
!IF "$(ME_COM_PCRE)" == ""
ME_COM_PCRE           = 1
!ENDIF
!IF "$(ME_COM_RC)" == ""
ME_COM_RC             = 1
!ENDIF
!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF
!IF "$(ME_COM_VXWORKS)" == ""
ME_COM_VXWORKS        = 0
!ENDIF

!IF "$(ME_COM_OPENSSL_PATH)" == ""
ME_COM_OPENSSL_PATH   = "/path/to/openssl"
!ENDIF

!IF "$(ME_COM_LIB)" == "1"
ME_COM_COMPILER       = 1
!ENDIF

!IF "$(ME_COM_LINK)" == "1"
ME_COM_COMPILER       = 1
!ENDIF

!IF "$(ME_COM_MBEDTLS)" == "1"
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_OPENSSL)" == "1"
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_RC)" == "1"
ME_COM_COMPILER       = 1
!ENDIF


CC                    = cl
LD                    = link
AR                    = lib
RC                    = rc
CFLAGS                = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS                = -DME_DEBUG=1 -DME_COM_COMPILER=$(ME_COM_COMPILER) -DME_COM_LIB=$(ME_COM_LIB) -DME_COM_LINK=$(ME_COM_LINK) -DME_COM_MATRIXSSL=$(ME_COM_MATRIXSSL) -DME_COM_MBEDTLS=$(ME_COM_MBEDTLS) -DME_COM_MPR=$(ME_COM_MPR) -DME_COM_NANOSSL=$(ME_COM_NANOSSL) -DME_COM_OPENSSL=$(ME_COM_OPENSSL) -DME_COM_OSDEP=$(ME_COM_OSDEP) -DME_COM_PCRE=$(ME_COM_PCRE) -DME_COM_RC=$(ME_COM_RC) -DME_COM_SSL=$(ME_COM_SSL) -DME_COM_VXWORKS=$(ME_COM_VXWORKS) 
IFLAGS                = -Ibuild\$(CONFIG)\inc
LDFLAGS               = -nologo -incremental:no -dynamicbase -nxcompat -debug -machine:x64
LIBPATHS              = "-libpath:$(BUILD)\bin"
LIBS                  = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib shell32.lib

ME_ROOT_PREFIX        = C:
ME_BASE_PREFIX        = $(ME_ROOT_PREFIX)\Program Files
ME_APP_PREFIX         = $(ME_BASE_PREFIX)\Embedthis Http
ME_VAPP_PREFIX        = $(ME_APP_PREFIX)
ME_DATA_PREFIX        = $(ME_VAPP_PREFIX)
ME_STATE_PREFIX       = $(ME_VAPP_PREFIX)
ME_BIN_PREFIX         = $(ME_VAPP_PREFIX)\bin
ME_INC_PREFIX         = $(ME_VAPP_PREFIX)\inc
ME_LIB_PREFIX         = $(ME_VAPP_PREFIX)\lib
ME_MAN_PREFIX         = $(ME_VAPP_PREFIX)\man
ME_ETC_PREFIX         = $(ME_VAPP_PREFIX)
ME_WEB_PREFIX         = $(ME_VAPP_PREFIX)\web
ME_LOG_PREFIX         = $(ME_VAPP_PREFIX)\log
ME_SPOOL_PREFIX       = $(ME_VAPP_PREFIX)\tmp
ME_CACHE_PREFIX       = $(ME_VAPP_PREFIX)\cache
ME_SRC_PREFIX         = $(ME_VAPP_PREFIX)\src


TARGETS               = $(TARGETS) build\$(CONFIG)\bin\http.exe
TARGETS               = $(TARGETS) build\$(CONFIG)\.install-certs-modified
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\server.exe

!IFNDEF SHOW
.SILENT:
!ENDIF

all build compile: prep $(TARGETS)

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(ME_APP_PREFIX)" == ""
	echo "ME_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(BUILD)\bin md $(BUILD)\bin
	@if not exist $(BUILD)\inc md $(BUILD)\inc
	@if not exist $(BUILD)\obj md $(BUILD)\obj
	@if not exist $(BUILD)\inc\me.h copy projects\http-windows-default-me.h $(BUILD)\inc\me.h

!IF "$(SHOW)" != ""
	@echo ..... [Info] Use "make SHOW=1" to trace executed commands and errors.
LOG =
!ELSE
LOG = >nul
!ENDIF

clean:
	if exist "build\$(CONFIG)\obj\actionHandler.obj" del /Q "build\$(CONFIG)\obj\actionHandler.obj"
	if exist "build\$(CONFIG)\obj\auth.obj" del /Q "build\$(CONFIG)\obj\auth.obj"
	if exist "build\$(CONFIG)\obj\basic.obj" del /Q "build\$(CONFIG)\obj\basic.obj"
	if exist "build\$(CONFIG)\obj\cache.obj" del /Q "build\$(CONFIG)\obj\cache.obj"
	if exist "build\$(CONFIG)\obj\chunkFilter.obj" del /Q "build\$(CONFIG)\obj\chunkFilter.obj"
	if exist "build\$(CONFIG)\obj\client.obj" del /Q "build\$(CONFIG)\obj\client.obj"
	if exist "build\$(CONFIG)\obj\config.obj" del /Q "build\$(CONFIG)\obj\config.obj"
	if exist "build\$(CONFIG)\obj\digest.obj" del /Q "build\$(CONFIG)\obj\digest.obj"
	if exist "build\$(CONFIG)\obj\dirHandler.obj" del /Q "build\$(CONFIG)\obj\dirHandler.obj"
	if exist "build\$(CONFIG)\obj\endpoint.obj" del /Q "build\$(CONFIG)\obj\endpoint.obj"
	if exist "build\$(CONFIG)\obj\error.obj" del /Q "build\$(CONFIG)\obj\error.obj"
	if exist "build\$(CONFIG)\obj\fileHandler.obj" del /Q "build\$(CONFIG)\obj\fileHandler.obj"
	if exist "build\$(CONFIG)\obj\host.obj" del /Q "build\$(CONFIG)\obj\host.obj"
	if exist "build\$(CONFIG)\obj\hpack.obj" del /Q "build\$(CONFIG)\obj\hpack.obj"
	if exist "build\$(CONFIG)\obj\http.obj" del /Q "build\$(CONFIG)\obj\http.obj"
	if exist "build\$(CONFIG)\obj\http1Filter.obj" del /Q "build\$(CONFIG)\obj\http1Filter.obj"
	if exist "build\$(CONFIG)\obj\http2Filter.obj" del /Q "build\$(CONFIG)\obj\http2Filter.obj"
	if exist "build\$(CONFIG)\obj\huff.obj" del /Q "build\$(CONFIG)\obj\huff.obj"
	if exist "build\$(CONFIG)\obj\mbedtls.obj" del /Q "build\$(CONFIG)\obj\mbedtls.obj"
	if exist "build\$(CONFIG)\obj\monitor.obj" del /Q "build\$(CONFIG)\obj\monitor.obj"
	if exist "build\$(CONFIG)\obj\mpr-mbedtls.obj" del /Q "build\$(CONFIG)\obj\mpr-mbedtls.obj"
	if exist "build\$(CONFIG)\obj\mpr-openssl.obj" del /Q "build\$(CONFIG)\obj\mpr-openssl.obj"
	if exist "build\$(CONFIG)\obj\mprLib.obj" del /Q "build\$(CONFIG)\obj\mprLib.obj"
	if exist "build\$(CONFIG)\obj\net.obj" del /Q "build\$(CONFIG)\obj\net.obj"
	if exist "build\$(CONFIG)\obj\netConnector.obj" del /Q "build\$(CONFIG)\obj\netConnector.obj"
	if exist "build\$(CONFIG)\obj\packet.obj" del /Q "build\$(CONFIG)\obj\packet.obj"
	if exist "build\$(CONFIG)\obj\pam.obj" del /Q "build\$(CONFIG)\obj\pam.obj"
	if exist "build\$(CONFIG)\obj\passHandler.obj" del /Q "build\$(CONFIG)\obj\passHandler.obj"
	if exist "build\$(CONFIG)\obj\pcre.obj" del /Q "build\$(CONFIG)\obj\pcre.obj"
	if exist "build\$(CONFIG)\obj\pipeline.obj" del /Q "build\$(CONFIG)\obj\pipeline.obj"
	if exist "build\$(CONFIG)\obj\process.obj" del /Q "build\$(CONFIG)\obj\process.obj"
	if exist "build\$(CONFIG)\obj\queue.obj" del /Q "build\$(CONFIG)\obj\queue.obj"
	if exist "build\$(CONFIG)\obj\rangeFilter.obj" del /Q "build\$(CONFIG)\obj\rangeFilter.obj"
	if exist "build\$(CONFIG)\obj\route.obj" del /Q "build\$(CONFIG)\obj\route.obj"
	if exist "build\$(CONFIG)\obj\rx.obj" del /Q "build\$(CONFIG)\obj\rx.obj"
	if exist "build\$(CONFIG)\obj\server.obj" del /Q "build\$(CONFIG)\obj\server.obj"
	if exist "build\$(CONFIG)\obj\service.obj" del /Q "build\$(CONFIG)\obj\service.obj"
	if exist "build\$(CONFIG)\obj\session.obj" del /Q "build\$(CONFIG)\obj\session.obj"
	if exist "build\$(CONFIG)\obj\stage.obj" del /Q "build\$(CONFIG)\obj\stage.obj"
	if exist "build\$(CONFIG)\obj\stream.obj" del /Q "build\$(CONFIG)\obj\stream.obj"
	if exist "build\$(CONFIG)\obj\tailFilter.obj" del /Q "build\$(CONFIG)\obj\tailFilter.obj"
	if exist "build\$(CONFIG)\obj\trace.obj" del /Q "build\$(CONFIG)\obj\trace.obj"
	if exist "build\$(CONFIG)\obj\tx.obj" del /Q "build\$(CONFIG)\obj\tx.obj"
	if exist "build\$(CONFIG)\obj\uploadFilter.obj" del /Q "build\$(CONFIG)\obj\uploadFilter.obj"
	if exist "build\$(CONFIG)\obj\uri.obj" del /Q "build\$(CONFIG)\obj\uri.obj"
	if exist "build\$(CONFIG)\obj\user.obj" del /Q "build\$(CONFIG)\obj\user.obj"
	if exist "build\$(CONFIG)\obj\var.obj" del /Q "build\$(CONFIG)\obj\var.obj"
	if exist "build\$(CONFIG)\obj\webSockFilter.obj" del /Q "build\$(CONFIG)\obj\webSockFilter.obj"
	if exist "build\$(CONFIG)\bin\http.exe" del /Q "build\$(CONFIG)\bin\http.exe"
	if exist "build\$(CONFIG)\bin\http.lib" del /Q "build\$(CONFIG)\bin\http.lib"
	if exist "build\$(CONFIG)\bin\http.pdb" del /Q "build\$(CONFIG)\bin\http.pdb"
	if exist "build\$(CONFIG)\bin\http.exp" del /Q "build\$(CONFIG)\bin\http.exp"
	if exist "build\$(CONFIG)\.install-certs-modified" del /Q "build\$(CONFIG)\.install-certs-modified"
	if exist "build\$(CONFIG)\bin\libhttp.dll" del /Q "build\$(CONFIG)\bin\libhttp.dll"
	if exist "build\$(CONFIG)\bin\libhttp.lib" del /Q "build\$(CONFIG)\bin\libhttp.lib"
	if exist "build\$(CONFIG)\bin\libhttp.pdb" del /Q "build\$(CONFIG)\bin\libhttp.pdb"
	if exist "build\$(CONFIG)\bin\libhttp.exp" del /Q "build\$(CONFIG)\bin\libhttp.exp"
	if exist "build\$(CONFIG)\bin\libmbedtls.lib" del /Q "build\$(CONFIG)\bin\libmbedtls.lib"
	if exist "build\$(CONFIG)\bin\libmpr.dll" del /Q "build\$(CONFIG)\bin\libmpr.dll"
	if exist "build\$(CONFIG)\bin\libmpr.lib" del /Q "build\$(CONFIG)\bin\libmpr.lib"
	if exist "build\$(CONFIG)\bin\libmpr.pdb" del /Q "build\$(CONFIG)\bin\libmpr.pdb"
	if exist "build\$(CONFIG)\bin\libmpr.exp" del /Q "build\$(CONFIG)\bin\libmpr.exp"
	if exist "build\$(CONFIG)\bin\libmpr-mbedtls.lib" del /Q "build\$(CONFIG)\bin\libmpr-mbedtls.lib"
	if exist "build\$(CONFIG)\bin\libpcre.dll" del /Q "build\$(CONFIG)\bin\libpcre.dll"
	if exist "build\$(CONFIG)\bin\libpcre.lib" del /Q "build\$(CONFIG)\bin\libpcre.lib"
	if exist "build\$(CONFIG)\bin\libpcre.pdb" del /Q "build\$(CONFIG)\bin\libpcre.pdb"
	if exist "build\$(CONFIG)\bin\libpcre.exp" del /Q "build\$(CONFIG)\bin\libpcre.exp"
	if exist "build\$(CONFIG)\bin\server.exe" del /Q "build\$(CONFIG)\bin\server.exe"
	if exist "build\$(CONFIG)\bin\server.lib" del /Q "build\$(CONFIG)\bin\server.lib"
	if exist "build\$(CONFIG)\bin\server.pdb" del /Q "build\$(CONFIG)\bin\server.pdb"
	if exist "build\$(CONFIG)\bin\server.exp" del /Q "build\$(CONFIG)\bin\server.exp"

#
#   embedtls.h
#
DEPS_1 = $(DEPS_1) src\mbedtls\embedtls.h

build\$(CONFIG)\inc\embedtls.h: $(DEPS_1)
	@echo ..... [Copy] build\$(CONFIG)\inc\embedtls.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\mbedtls\embedtls.h+modified build\$(CONFIG)\inc\embedtls.h $(LOG)

#
#   http.h
#
DEPS_2 = $(DEPS_2) src\http.h

build\$(CONFIG)\inc\http.h: $(DEPS_2)
	@echo ..... [Copy] build\$(CONFIG)\inc\http.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\http.h+modified build\$(CONFIG)\inc\http.h $(LOG)

#
#   mbedtls.h
#
DEPS_3 = $(DEPS_3) src\mbedtls\mbedtls.h

build\$(CONFIG)\inc\mbedtls.h: $(DEPS_3)
	@echo ..... [Copy] build\$(CONFIG)\inc\mbedtls.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\mbedtls\mbedtls.h+modified build\$(CONFIG)\inc\mbedtls.h $(LOG)

#
#   me.h
#

build\$(CONFIG)\inc\me.h: $(DEPS_4)

#
#   osdep.h
#
DEPS_5 = $(DEPS_5) src\osdep\osdep.h
DEPS_5 = $(DEPS_5) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\inc\osdep.h: $(DEPS_5)
	@echo ..... [Copy] build\$(CONFIG)\inc\osdep.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\osdep\osdep.h+modified build\$(CONFIG)\inc\osdep.h $(LOG)

#
#   mpr.h
#
DEPS_6 = $(DEPS_6) src\mpr\mpr.h
DEPS_6 = $(DEPS_6) build\$(CONFIG)\inc\me.h
DEPS_6 = $(DEPS_6) build\$(CONFIG)\inc\osdep.h

build\$(CONFIG)\inc\mpr.h: $(DEPS_6)
	@echo ..... [Copy] build\$(CONFIG)\inc\mpr.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\mpr\mpr.h+modified build\$(CONFIG)\inc\mpr.h $(LOG)

#
#   pcre.h
#
DEPS_7 = $(DEPS_7) src\pcre\pcre.h

build\$(CONFIG)\inc\pcre.h: $(DEPS_7)
	@echo ..... [Copy] build\$(CONFIG)\inc\pcre.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\pcre\pcre.h+modified build\$(CONFIG)\inc\pcre.h $(LOG)

#
#   http.h
#

src\http.h: $(DEPS_8)

#
#   actionHandler.obj
#
DEPS_9 = $(DEPS_9) src\http.h

build\$(CONFIG)\obj\actionHandler.obj: \
    src\actionHandler.c $(DEPS_9)
	@echo .. [Compile] build\$(CONFIG)\obj\actionHandler.obj
	"$(CC)" -c -Fo$(BUILD)\obj\actionHandler.obj -Fd$(BUILD)\obj\actionHandler.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\actionHandler.c $(LOG)

#
#   auth.obj
#
DEPS_10 = $(DEPS_10) src\http.h

build\$(CONFIG)\obj\auth.obj: \
    src\auth.c $(DEPS_10)
	@echo .. [Compile] build\$(CONFIG)\obj\auth.obj
	"$(CC)" -c -Fo$(BUILD)\obj\auth.obj -Fd$(BUILD)\obj\auth.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\auth.c $(LOG)

#
#   basic.obj
#
DEPS_11 = $(DEPS_11) src\http.h

build\$(CONFIG)\obj\basic.obj: \
    src\basic.c $(DEPS_11)
	@echo .. [Compile] build\$(CONFIG)\obj\basic.obj
	"$(CC)" -c -Fo$(BUILD)\obj\basic.obj -Fd$(BUILD)\obj\basic.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\basic.c $(LOG)

#
#   cache.obj
#
DEPS_12 = $(DEPS_12) src\http.h

build\$(CONFIG)\obj\cache.obj: \
    src\cache.c $(DEPS_12)
	@echo .. [Compile] build\$(CONFIG)\obj\cache.obj
	"$(CC)" -c -Fo$(BUILD)\obj\cache.obj -Fd$(BUILD)\obj\cache.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\cache.c $(LOG)

#
#   chunkFilter.obj
#
DEPS_13 = $(DEPS_13) src\http.h

build\$(CONFIG)\obj\chunkFilter.obj: \
    src\chunkFilter.c $(DEPS_13)
	@echo .. [Compile] build\$(CONFIG)\obj\chunkFilter.obj
	"$(CC)" -c -Fo$(BUILD)\obj\chunkFilter.obj -Fd$(BUILD)\obj\chunkFilter.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\chunkFilter.c $(LOG)

#
#   client.obj
#
DEPS_14 = $(DEPS_14) src\http.h

build\$(CONFIG)\obj\client.obj: \
    src\client.c $(DEPS_14)
	@echo .. [Compile] build\$(CONFIG)\obj\client.obj
	"$(CC)" -c -Fo$(BUILD)\obj\client.obj -Fd$(BUILD)\obj\client.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\client.c $(LOG)

#
#   config.obj
#
DEPS_15 = $(DEPS_15) src\http.h

build\$(CONFIG)\obj\config.obj: \
    src\config.c $(DEPS_15)
	@echo .. [Compile] build\$(CONFIG)\obj\config.obj
	"$(CC)" -c -Fo$(BUILD)\obj\config.obj -Fd$(BUILD)\obj\config.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\config.c $(LOG)

#
#   digest.obj
#
DEPS_16 = $(DEPS_16) src\http.h

build\$(CONFIG)\obj\digest.obj: \
    src\digest.c $(DEPS_16)
	@echo .. [Compile] build\$(CONFIG)\obj\digest.obj
	"$(CC)" -c -Fo$(BUILD)\obj\digest.obj -Fd$(BUILD)\obj\digest.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\digest.c $(LOG)

#
#   dirHandler.obj
#
DEPS_17 = $(DEPS_17) src\http.h

build\$(CONFIG)\obj\dirHandler.obj: \
    src\dirHandler.c $(DEPS_17)
	@echo .. [Compile] build\$(CONFIG)\obj\dirHandler.obj
	"$(CC)" -c -Fo$(BUILD)\obj\dirHandler.obj -Fd$(BUILD)\obj\dirHandler.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\dirHandler.c $(LOG)

#
#   endpoint.obj
#
DEPS_18 = $(DEPS_18) src\http.h
DEPS_18 = $(DEPS_18) build\$(CONFIG)\inc\pcre.h

build\$(CONFIG)\obj\endpoint.obj: \
    src\endpoint.c $(DEPS_18)
	@echo .. [Compile] build\$(CONFIG)\obj\endpoint.obj
	"$(CC)" -c -Fo$(BUILD)\obj\endpoint.obj -Fd$(BUILD)\obj\endpoint.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\endpoint.c $(LOG)

#
#   error.obj
#
DEPS_19 = $(DEPS_19) src\http.h

build\$(CONFIG)\obj\error.obj: \
    src\error.c $(DEPS_19)
	@echo .. [Compile] build\$(CONFIG)\obj\error.obj
	"$(CC)" -c -Fo$(BUILD)\obj\error.obj -Fd$(BUILD)\obj\error.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\error.c $(LOG)

#
#   fileHandler.obj
#
DEPS_20 = $(DEPS_20) src\http.h

build\$(CONFIG)\obj\fileHandler.obj: \
    src\fileHandler.c $(DEPS_20)
	@echo .. [Compile] build\$(CONFIG)\obj\fileHandler.obj
	"$(CC)" -c -Fo$(BUILD)\obj\fileHandler.obj -Fd$(BUILD)\obj\fileHandler.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\fileHandler.c $(LOG)

#
#   host.obj
#
DEPS_21 = $(DEPS_21) src\http.h
DEPS_21 = $(DEPS_21) build\$(CONFIG)\inc\pcre.h

build\$(CONFIG)\obj\host.obj: \
    src\host.c $(DEPS_21)
	@echo .. [Compile] build\$(CONFIG)\obj\host.obj
	"$(CC)" -c -Fo$(BUILD)\obj\host.obj -Fd$(BUILD)\obj\host.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\host.c $(LOG)

#
#   hpack.obj
#
DEPS_22 = $(DEPS_22) src\http.h

build\$(CONFIG)\obj\hpack.obj: \
    src\hpack.c $(DEPS_22)
	@echo .. [Compile] build\$(CONFIG)\obj\hpack.obj
	"$(CC)" -c -Fo$(BUILD)\obj\hpack.obj -Fd$(BUILD)\obj\hpack.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\hpack.c $(LOG)

#
#   http.obj
#
DEPS_23 = $(DEPS_23) src\http.h

build\$(CONFIG)\obj\http.obj: \
    src\http.c $(DEPS_23)
	@echo .. [Compile] build\$(CONFIG)\obj\http.obj
	"$(CC)" -c -Fo$(BUILD)\obj\http.obj -Fd$(BUILD)\obj\http.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\http.c $(LOG)

#
#   http1Filter.obj
#
DEPS_24 = $(DEPS_24) src\http.h

build\$(CONFIG)\obj\http1Filter.obj: \
    src\http1Filter.c $(DEPS_24)
	@echo .. [Compile] build\$(CONFIG)\obj\http1Filter.obj
	"$(CC)" -c -Fo$(BUILD)\obj\http1Filter.obj -Fd$(BUILD)\obj\http1Filter.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\http1Filter.c $(LOG)

#
#   http2Filter.obj
#
DEPS_25 = $(DEPS_25) src\http.h

build\$(CONFIG)\obj\http2Filter.obj: \
    src\http2Filter.c $(DEPS_25)
	@echo .. [Compile] build\$(CONFIG)\obj\http2Filter.obj
	"$(CC)" -c -Fo$(BUILD)\obj\http2Filter.obj -Fd$(BUILD)\obj\http2Filter.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\http2Filter.c $(LOG)

#
#   huff.obj
#
DEPS_26 = $(DEPS_26) src\http.h

build\$(CONFIG)\obj\huff.obj: \
    src\huff.c $(DEPS_26)
	@echo .. [Compile] build\$(CONFIG)\obj\huff.obj
	"$(CC)" -c -Fo$(BUILD)\obj\huff.obj -Fd$(BUILD)\obj\huff.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\huff.c $(LOG)

#
#   mbedtls.h
#

src\mbedtls\mbedtls.h: $(DEPS_27)

#
#   mbedtls.obj
#
DEPS_28 = $(DEPS_28) src\mbedtls\mbedtls.h

build\$(CONFIG)\obj\mbedtls.obj: \
    src\mbedtls\mbedtls.c $(DEPS_28)
	@echo .. [Compile] build\$(CONFIG)\obj\mbedtls.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mbedtls.obj -Fd$(BUILD)\obj\mbedtls.pdb -nologo -GR- -Zi -Od -MDd $(DFLAGS) -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" $(IFLAGS) src\mbedtls\mbedtls.c $(LOG)

#
#   monitor.obj
#
DEPS_29 = $(DEPS_29) src\http.h

build\$(CONFIG)\obj\monitor.obj: \
    src\monitor.c $(DEPS_29)
	@echo .. [Compile] build\$(CONFIG)\obj\monitor.obj
	"$(CC)" -c -Fo$(BUILD)\obj\monitor.obj -Fd$(BUILD)\obj\monitor.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\monitor.c $(LOG)

#
#   mpr-mbedtls.obj
#
DEPS_30 = $(DEPS_30) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\mpr-mbedtls.obj: \
    src\mpr-mbedtls\mpr-mbedtls.c $(DEPS_30)
	@echo .. [Compile] build\$(CONFIG)\obj\mpr-mbedtls.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mpr-mbedtls.obj -Fd$(BUILD)\obj\mpr-mbedtls.pdb -nologo -GR- -Zi -Od -MDd $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" $(IFLAGS) src\mpr-mbedtls\mpr-mbedtls.c $(LOG)

#
#   mpr-openssl.obj
#
DEPS_31 = $(DEPS_31) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\mpr-openssl.obj: \
    src\mpr-openssl\mpr-openssl.c $(DEPS_31)
	@echo .. [Compile] build\$(CONFIG)\obj\mpr-openssl.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mpr-openssl.obj -Fd$(BUILD)\obj\mpr-openssl.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) "-I$(BUILD)\inc" "-I$(ME_COM_OPENSSL_PATH)\inc32" src\mpr-openssl\mpr-openssl.c $(LOG)

#
#   mpr.h
#

src\mpr\mpr.h: $(DEPS_32)

#
#   mprLib.obj
#
DEPS_33 = $(DEPS_33) src\mpr\mpr.h

build\$(CONFIG)\obj\mprLib.obj: \
    src\mpr\mprLib.c $(DEPS_33)
	@echo .. [Compile] build\$(CONFIG)\obj\mprLib.obj
	"$(CC)" -c -Fo$(BUILD)\obj\mprLib.obj -Fd$(BUILD)\obj\mprLib.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\mpr\mprLib.c $(LOG)

#
#   net.obj
#
DEPS_34 = $(DEPS_34) src\http.h

build\$(CONFIG)\obj\net.obj: \
    src\net.c $(DEPS_34)
	@echo .. [Compile] build\$(CONFIG)\obj\net.obj
	"$(CC)" -c -Fo$(BUILD)\obj\net.obj -Fd$(BUILD)\obj\net.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\net.c $(LOG)

#
#   netConnector.obj
#
DEPS_35 = $(DEPS_35) src\http.h

build\$(CONFIG)\obj\netConnector.obj: \
    src\netConnector.c $(DEPS_35)
	@echo .. [Compile] build\$(CONFIG)\obj\netConnector.obj
	"$(CC)" -c -Fo$(BUILD)\obj\netConnector.obj -Fd$(BUILD)\obj\netConnector.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\netConnector.c $(LOG)

#
#   packet.obj
#
DEPS_36 = $(DEPS_36) src\http.h

build\$(CONFIG)\obj\packet.obj: \
    src\packet.c $(DEPS_36)
	@echo .. [Compile] build\$(CONFIG)\obj\packet.obj
	"$(CC)" -c -Fo$(BUILD)\obj\packet.obj -Fd$(BUILD)\obj\packet.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\packet.c $(LOG)

#
#   pam.obj
#
DEPS_37 = $(DEPS_37) src\http.h

build\$(CONFIG)\obj\pam.obj: \
    src\pam.c $(DEPS_37)
	@echo .. [Compile] build\$(CONFIG)\obj\pam.obj
	"$(CC)" -c -Fo$(BUILD)\obj\pam.obj -Fd$(BUILD)\obj\pam.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\pam.c $(LOG)

#
#   passHandler.obj
#
DEPS_38 = $(DEPS_38) src\http.h

build\$(CONFIG)\obj\passHandler.obj: \
    src\passHandler.c $(DEPS_38)
	@echo .. [Compile] build\$(CONFIG)\obj\passHandler.obj
	"$(CC)" -c -Fo$(BUILD)\obj\passHandler.obj -Fd$(BUILD)\obj\passHandler.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\passHandler.c $(LOG)

#
#   pcre.h
#

src\pcre\pcre.h: $(DEPS_39)

#
#   pcre.obj
#
DEPS_40 = $(DEPS_40) build\$(CONFIG)\inc\me.h
DEPS_40 = $(DEPS_40) src\pcre\pcre.h

build\$(CONFIG)\obj\pcre.obj: \
    src\pcre\pcre.c $(DEPS_40)
	@echo .. [Compile] build\$(CONFIG)\obj\pcre.obj
	"$(CC)" -c -Fo$(BUILD)\obj\pcre.obj -Fd$(BUILD)\obj\pcre.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\pcre\pcre.c $(LOG)

#
#   pipeline.obj
#
DEPS_41 = $(DEPS_41) src\http.h

build\$(CONFIG)\obj\pipeline.obj: \
    src\pipeline.c $(DEPS_41)
	@echo .. [Compile] build\$(CONFIG)\obj\pipeline.obj
	"$(CC)" -c -Fo$(BUILD)\obj\pipeline.obj -Fd$(BUILD)\obj\pipeline.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\pipeline.c $(LOG)

#
#   process.obj
#
DEPS_42 = $(DEPS_42) src\http.h

build\$(CONFIG)\obj\process.obj: \
    src\process.c $(DEPS_42)
	@echo .. [Compile] build\$(CONFIG)\obj\process.obj
	"$(CC)" -c -Fo$(BUILD)\obj\process.obj -Fd$(BUILD)\obj\process.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\process.c $(LOG)

#
#   queue.obj
#
DEPS_43 = $(DEPS_43) src\http.h

build\$(CONFIG)\obj\queue.obj: \
    src\queue.c $(DEPS_43)
	@echo .. [Compile] build\$(CONFIG)\obj\queue.obj
	"$(CC)" -c -Fo$(BUILD)\obj\queue.obj -Fd$(BUILD)\obj\queue.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\queue.c $(LOG)

#
#   rangeFilter.obj
#
DEPS_44 = $(DEPS_44) src\http.h

build\$(CONFIG)\obj\rangeFilter.obj: \
    src\rangeFilter.c $(DEPS_44)
	@echo .. [Compile] build\$(CONFIG)\obj\rangeFilter.obj
	"$(CC)" -c -Fo$(BUILD)\obj\rangeFilter.obj -Fd$(BUILD)\obj\rangeFilter.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\rangeFilter.c $(LOG)

#
#   route.obj
#
DEPS_45 = $(DEPS_45) src\http.h
DEPS_45 = $(DEPS_45) build\$(CONFIG)\inc\pcre.h

build\$(CONFIG)\obj\route.obj: \
    src\route.c $(DEPS_45)
	@echo .. [Compile] build\$(CONFIG)\obj\route.obj
	"$(CC)" -c -Fo$(BUILD)\obj\route.obj -Fd$(BUILD)\obj\route.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\route.c $(LOG)

#
#   rx.obj
#
DEPS_46 = $(DEPS_46) src\http.h

build\$(CONFIG)\obj\rx.obj: \
    src\rx.c $(DEPS_46)
	@echo .. [Compile] build\$(CONFIG)\obj\rx.obj
	"$(CC)" -c -Fo$(BUILD)\obj\rx.obj -Fd$(BUILD)\obj\rx.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\rx.c $(LOG)

#
#   server.obj
#
DEPS_47 = $(DEPS_47) src\http.h

build\$(CONFIG)\obj\server.obj: \
    src\server.c $(DEPS_47)
	@echo .. [Compile] build\$(CONFIG)\obj\server.obj
	"$(CC)" -c -Fo$(BUILD)\obj\server.obj -Fd$(BUILD)\obj\server.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\server.c $(LOG)

#
#   service.obj
#
DEPS_48 = $(DEPS_48) src\http.h

build\$(CONFIG)\obj\service.obj: \
    src\service.c $(DEPS_48)
	@echo .. [Compile] build\$(CONFIG)\obj\service.obj
	"$(CC)" -c -Fo$(BUILD)\obj\service.obj -Fd$(BUILD)\obj\service.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\service.c $(LOG)

#
#   session.obj
#
DEPS_49 = $(DEPS_49) src\http.h

build\$(CONFIG)\obj\session.obj: \
    src\session.c $(DEPS_49)
	@echo .. [Compile] build\$(CONFIG)\obj\session.obj
	"$(CC)" -c -Fo$(BUILD)\obj\session.obj -Fd$(BUILD)\obj\session.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\session.c $(LOG)

#
#   stage.obj
#
DEPS_50 = $(DEPS_50) src\http.h

build\$(CONFIG)\obj\stage.obj: \
    src\stage.c $(DEPS_50)
	@echo .. [Compile] build\$(CONFIG)\obj\stage.obj
	"$(CC)" -c -Fo$(BUILD)\obj\stage.obj -Fd$(BUILD)\obj\stage.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\stage.c $(LOG)

#
#   stream.obj
#
DEPS_51 = $(DEPS_51) src\http.h

build\$(CONFIG)\obj\stream.obj: \
    src\stream.c $(DEPS_51)
	@echo .. [Compile] build\$(CONFIG)\obj\stream.obj
	"$(CC)" -c -Fo$(BUILD)\obj\stream.obj -Fd$(BUILD)\obj\stream.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\stream.c $(LOG)

#
#   tailFilter.obj
#
DEPS_52 = $(DEPS_52) src\http.h

build\$(CONFIG)\obj\tailFilter.obj: \
    src\tailFilter.c $(DEPS_52)
	@echo .. [Compile] build\$(CONFIG)\obj\tailFilter.obj
	"$(CC)" -c -Fo$(BUILD)\obj\tailFilter.obj -Fd$(BUILD)\obj\tailFilter.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\tailFilter.c $(LOG)

#
#   trace.obj
#
DEPS_53 = $(DEPS_53) src\http.h

build\$(CONFIG)\obj\trace.obj: \
    src\trace.c $(DEPS_53)
	@echo .. [Compile] build\$(CONFIG)\obj\trace.obj
	"$(CC)" -c -Fo$(BUILD)\obj\trace.obj -Fd$(BUILD)\obj\trace.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\trace.c $(LOG)

#
#   tx.obj
#
DEPS_54 = $(DEPS_54) src\http.h

build\$(CONFIG)\obj\tx.obj: \
    src\tx.c $(DEPS_54)
	@echo .. [Compile] build\$(CONFIG)\obj\tx.obj
	"$(CC)" -c -Fo$(BUILD)\obj\tx.obj -Fd$(BUILD)\obj\tx.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\tx.c $(LOG)

#
#   uploadFilter.obj
#
DEPS_55 = $(DEPS_55) src\http.h

build\$(CONFIG)\obj\uploadFilter.obj: \
    src\uploadFilter.c $(DEPS_55)
	@echo .. [Compile] build\$(CONFIG)\obj\uploadFilter.obj
	"$(CC)" -c -Fo$(BUILD)\obj\uploadFilter.obj -Fd$(BUILD)\obj\uploadFilter.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\uploadFilter.c $(LOG)

#
#   uri.obj
#
DEPS_56 = $(DEPS_56) src\http.h

build\$(CONFIG)\obj\uri.obj: \
    src\uri.c $(DEPS_56)
	@echo .. [Compile] build\$(CONFIG)\obj\uri.obj
	"$(CC)" -c -Fo$(BUILD)\obj\uri.obj -Fd$(BUILD)\obj\uri.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\uri.c $(LOG)

#
#   user.obj
#
DEPS_57 = $(DEPS_57) src\http.h

build\$(CONFIG)\obj\user.obj: \
    src\user.c $(DEPS_57)
	@echo .. [Compile] build\$(CONFIG)\obj\user.obj
	"$(CC)" -c -Fo$(BUILD)\obj\user.obj -Fd$(BUILD)\obj\user.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\user.c $(LOG)

#
#   var.obj
#
DEPS_58 = $(DEPS_58) src\http.h

build\$(CONFIG)\obj\var.obj: \
    src\var.c $(DEPS_58)
	@echo .. [Compile] build\$(CONFIG)\obj\var.obj
	"$(CC)" -c -Fo$(BUILD)\obj\var.obj -Fd$(BUILD)\obj\var.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\var.c $(LOG)

#
#   webSockFilter.obj
#
DEPS_59 = $(DEPS_59) src\http.h

build\$(CONFIG)\obj\webSockFilter.obj: \
    src\webSockFilter.c $(DEPS_59)
	@echo .. [Compile] build\$(CONFIG)\obj\webSockFilter.obj
	"$(CC)" -c -Fo$(BUILD)\obj\webSockFilter.obj -Fd$(BUILD)\obj\webSockFilter.pdb $(CFLAGS) $(DFLAGS) -D_FILE_OFFSET_BITS=64 -DMBEDTLS_USER_CONFIG_FILE=\"embedtls.h\" -DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\inc32" src\webSockFilter.c $(LOG)

!IF "$(ME_COM_MBEDTLS)" == "1"
#
#   libmbedtls
#
DEPS_60 = $(DEPS_60) build\$(CONFIG)\inc\osdep.h
DEPS_60 = $(DEPS_60) build\$(CONFIG)\inc\embedtls.h
DEPS_60 = $(DEPS_60) build\$(CONFIG)\inc\mbedtls.h
DEPS_60 = $(DEPS_60) build\$(CONFIG)\obj\mbedtls.obj

build\$(CONFIG)\bin\libmbedtls.lib: $(DEPS_60)
	@echo ..... [Link] build\$(CONFIG)\bin\libmbedtls.lib
	"$(AR)" -nologo -out:$(BUILD)\bin\libmbedtls.lib "$(BUILD)\obj\mbedtls.obj" $(LOG)
!ENDIF

!IF "$(ME_COM_MBEDTLS)" == "1"
#
#   libmpr-mbedtls
#
DEPS_61 = $(DEPS_61) build\$(CONFIG)\bin\libmbedtls.lib
DEPS_61 = $(DEPS_61) build\$(CONFIG)\obj\mpr-mbedtls.obj

build\$(CONFIG)\bin\libmpr-mbedtls.lib: $(DEPS_61)
	@echo ..... [Link] build\$(CONFIG)\bin\libmpr-mbedtls.lib
	"$(AR)" -nologo -out:$(BUILD)\bin\libmpr-mbedtls.lib "$(BUILD)\obj\mpr-mbedtls.obj" $(LOG)
!ENDIF

!IF "$(ME_COM_OPENSSL)" == "1"
#
#   libmpr-openssl
#
DEPS_62 = $(DEPS_62) build\$(CONFIG)\obj\mpr-openssl.obj

build\$(CONFIG)\bin\libmpr-openssl.lib: $(DEPS_62)
	@echo ..... [Link] build\$(CONFIG)\bin\libmpr-openssl.lib
	"$(AR)" -nologo -out:$(BUILD)\bin\libmpr-openssl.lib "$(BUILD)\obj\mpr-openssl.obj" $(LOG)
!ENDIF

#
#   libmpr
#
DEPS_63 = $(DEPS_63) build\$(CONFIG)\inc\osdep.h
!IF "$(ME_COM_MBEDTLS)" == "1"
DEPS_63 = $(DEPS_63) build\$(CONFIG)\bin\libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
DEPS_63 = $(DEPS_63) build\$(CONFIG)\bin\libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
DEPS_63 = $(DEPS_63) build\$(CONFIG)\bin\libmpr-openssl.lib
!ENDIF
DEPS_63 = $(DEPS_63) build\$(CONFIG)\inc\mpr.h
DEPS_63 = $(DEPS_63) build\$(CONFIG)\obj\mprLib.obj

!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_63 = $(LIBS_63) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_63 = $(LIBS_63) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_63 = $(LIBS_63) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_63 = $(LIBS_63) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_63 = $(LIBS_63) gdi32.lib
LIBPATHS_63 = $(LIBPATHS_63) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_63 = $(LIBS_63) libeay32.lib
LIBPATHS_63 = $(LIBPATHS_63) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_63 = $(LIBS_63) ssleay32.lib
LIBPATHS_63 = $(LIBPATHS_63) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_63 = $(LIBS_63) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_63 = $(LIBS_63) libmpr-mbedtls.lib
!ENDIF

build\$(CONFIG)\bin\libmpr.dll: $(DEPS_63)
	@echo ..... [Link] build\$(CONFIG)\bin\libmpr.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libmpr.dll -entry:_DllMainCRTStartup $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\mprLib.obj" $(LIBPATHS_63) $(LIBS_63) $(LIBS)  $(LOG)

!IF "$(ME_COM_PCRE)" == "1"
#
#   libpcre
#
DEPS_64 = $(DEPS_64) build\$(CONFIG)\inc\pcre.h
DEPS_64 = $(DEPS_64) build\$(CONFIG)\obj\pcre.obj

build\$(CONFIG)\bin\libpcre.dll: $(DEPS_64)
	@echo ..... [Link] build\$(CONFIG)\bin\libpcre.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libpcre.dll -entry:_DllMainCRTStartup $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\pcre.obj" $(LIBS)  $(LOG)
!ENDIF

#
#   libhttp
#
DEPS_65 = $(DEPS_65) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_PCRE)" == "1"
DEPS_65 = $(DEPS_65) build\$(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_65 = $(DEPS_65) build\$(CONFIG)\inc\http.h
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\actionHandler.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\auth.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\basic.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\cache.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\chunkFilter.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\client.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\config.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\digest.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\dirHandler.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\endpoint.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\error.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\fileHandler.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\host.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\hpack.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\http1Filter.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\http2Filter.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\huff.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\monitor.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\net.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\netConnector.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\packet.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\pam.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\passHandler.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\pipeline.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\process.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\queue.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\rangeFilter.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\route.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\rx.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\server.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\service.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\session.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\stage.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\stream.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\tailFilter.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\trace.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\tx.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\uploadFilter.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\uri.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\user.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\var.obj
DEPS_65 = $(DEPS_65) build\$(CONFIG)\obj\webSockFilter.obj

!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_65 = $(LIBS_65) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_65 = $(LIBS_65) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_65 = $(LIBS_65) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_65 = $(LIBS_65) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_65 = $(LIBS_65) gdi32.lib
LIBPATHS_65 = $(LIBPATHS_65) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_65 = $(LIBS_65) libeay32.lib
LIBPATHS_65 = $(LIBPATHS_65) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_65 = $(LIBS_65) ssleay32.lib
LIBPATHS_65 = $(LIBPATHS_65) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
LIBS_65 = $(LIBS_65) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_65 = $(LIBS_65) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_65 = $(LIBS_65) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_65 = $(LIBS_65) libpcre.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_65 = $(LIBS_65) libpcre.lib
!ENDIF
LIBS_65 = $(LIBS_65) libmpr.lib

build\$(CONFIG)\bin\libhttp.dll: $(DEPS_65)
	@echo ..... [Link] build\$(CONFIG)\bin\libhttp.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libhttp.dll -entry:_DllMainCRTStartup $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\actionHandler.obj" "$(BUILD)\obj\auth.obj" "$(BUILD)\obj\basic.obj" "$(BUILD)\obj\cache.obj" "$(BUILD)\obj\chunkFilter.obj" "$(BUILD)\obj\client.obj" "$(BUILD)\obj\config.obj" "$(BUILD)\obj\digest.obj" "$(BUILD)\obj\dirHandler.obj" "$(BUILD)\obj\endpoint.obj" "$(BUILD)\obj\error.obj" "$(BUILD)\obj\fileHandler.obj" "$(BUILD)\obj\host.obj" "$(BUILD)\obj\hpack.obj" "$(BUILD)\obj\http1Filter.obj" "$(BUILD)\obj\http2Filter.obj" "$(BUILD)\obj\huff.obj" "$(BUILD)\obj\monitor.obj" "$(BUILD)\obj\net.obj" "$(BUILD)\obj\netConnector.obj" "$(BUILD)\obj\packet.obj" "$(BUILD)\obj\pam.obj" "$(BUILD)\obj\passHandler.obj" "$(BUILD)\obj\pipeline.obj" "$(BUILD)\obj\process.obj" "$(BUILD)\obj\queue.obj" "$(BUILD)\obj\rangeFilter.obj" "$(BUILD)\obj\route.obj" "$(BUILD)\obj\rx.obj" "$(BUILD)\obj\server.obj" "$(BUILD)\obj\service.obj" "$(BUILD)\obj\session.obj" "$(BUILD)\obj\stage.obj" "$(BUILD)\obj\stream.obj" "$(BUILD)\obj\tailFilter.obj" "$(BUILD)\obj\trace.obj" "$(BUILD)\obj\tx.obj" "$(BUILD)\obj\uploadFilter.obj" "$(BUILD)\obj\uri.obj" "$(BUILD)\obj\user.obj" "$(BUILD)\obj\var.obj" "$(BUILD)\obj\webSockFilter.obj" $(LIBPATHS_65) $(LIBS_65) $(LIBS)  $(LOG)

#
#   http
#
DEPS_66 = $(DEPS_66) build\$(CONFIG)\bin\libhttp.dll
DEPS_66 = $(DEPS_66) build\$(CONFIG)\obj\http.obj

!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_66 = $(LIBS_66) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_66 = $(LIBS_66) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_66 = $(LIBS_66) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_66 = $(LIBS_66) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_66 = $(LIBS_66) gdi32.lib
LIBPATHS_66 = $(LIBPATHS_66) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_66 = $(LIBS_66) libeay32.lib
LIBPATHS_66 = $(LIBPATHS_66) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_66 = $(LIBS_66) ssleay32.lib
LIBPATHS_66 = $(LIBPATHS_66) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
LIBS_66 = $(LIBS_66) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_66 = $(LIBS_66) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_66 = $(LIBS_66) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_66 = $(LIBS_66) libpcre.lib
!ENDIF
LIBS_66 = $(LIBS_66) libhttp.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_66 = $(LIBS_66) libpcre.lib
!ENDIF
LIBS_66 = $(LIBS_66) libmpr.lib

build\$(CONFIG)\bin\http.exe: $(DEPS_66)
	@echo ..... [Link] build\$(CONFIG)\bin\http.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\http.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\http.obj" $(LIBPATHS_66) $(LIBS_66) $(LIBS)  $(LOG)

#
#   install-certs
#
DEPS_67 = $(DEPS_67) src\certs\samples\ca.crt
DEPS_67 = $(DEPS_67) src\certs\samples\ca.key
DEPS_67 = $(DEPS_67) src\certs\samples\ec.crt
DEPS_67 = $(DEPS_67) src\certs\samples\ec.key
DEPS_67 = $(DEPS_67) src\certs\samples\roots.crt
DEPS_67 = $(DEPS_67) src\certs\samples\self.crt
DEPS_67 = $(DEPS_67) src\certs\samples\self.key
DEPS_67 = $(DEPS_67) src\certs\samples\test.crt
DEPS_67 = $(DEPS_67) src\certs\samples\test.key

build\$(CONFIG)\.install-certs-modified: $(DEPS_67)
	@echo ..... [Copy] build\$(CONFIG)\bin
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\certs\samples\ca.crt+modified build\$(CONFIG)\bin\ca.crt $(LOG)
	copy /Y /B src\certs\samples\ca.key+modified build\$(CONFIG)\bin\ca.key $(LOG)
	copy /Y /B src\certs\samples\ec.crt+modified build\$(CONFIG)\bin\ec.crt $(LOG)
	copy /Y /B src\certs\samples\ec.key+modified build\$(CONFIG)\bin\ec.key $(LOG)
	copy /Y /B src\certs\samples\roots.crt+modified build\$(CONFIG)\bin\roots.crt $(LOG)
	copy /Y /B src\certs\samples\self.crt+modified build\$(CONFIG)\bin\self.crt $(LOG)
	copy /Y /B src\certs\samples\self.key+modified build\$(CONFIG)\bin\self.key $(LOG)
	copy /Y /B src\certs\samples\test.crt+modified build\$(CONFIG)\bin\test.crt $(LOG)
	copy /Y /B src\certs\samples\test.key+modified build\$(CONFIG)\bin\test.key $(LOG)
	copy /Y /B nul+modified build\$(CONFIG)\.install-certs-modified $(LOG)

#
#   server
#
DEPS_68 = $(DEPS_68) build\$(CONFIG)\bin\libhttp.dll
DEPS_68 = $(DEPS_68) build\$(CONFIG)\obj\server.obj

!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_68 = $(LIBS_68) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_68 = $(LIBS_68) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_68 = $(LIBS_68) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_68 = $(LIBS_68) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_68 = $(LIBS_68) gdi32.lib
LIBPATHS_68 = $(LIBPATHS_68) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_68 = $(LIBS_68) libeay32.lib
LIBPATHS_68 = $(LIBPATHS_68) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_68 = $(LIBS_68) ssleay32.lib
LIBPATHS_68 = $(LIBPATHS_68) -libpath:$(ME_COM_OPENSSL_PATH)/out32
!ENDIF
LIBS_68 = $(LIBS_68) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_68 = $(LIBS_68) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_68 = $(LIBS_68) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_68 = $(LIBS_68) libpcre.lib
!ENDIF
LIBS_68 = $(LIBS_68) libhttp.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_68 = $(LIBS_68) libpcre.lib
!ENDIF
LIBS_68 = $(LIBS_68) libmpr.lib

build\$(CONFIG)\bin\server.exe: $(DEPS_68)
	@echo ..... [Link] build\$(CONFIG)\bin\server.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\server.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\server.obj" $(LIBPATHS_68) $(LIBS_68) $(LIBS)  $(LOG)

#
#   installPrep
#

installPrep: $(DEPS_69)
	if [ "`id -u`" != 0 ]
	then echo "Must run as root. Rerun with sudo."
	exit 255
	fi

#
#   stop
#

stop: $(DEPS_70)
#  Omit build script stop

#
#   installBinary
#

installBinary: $(DEPS_71)
#  Omit build script installBinary

#
#   start
#

start: $(DEPS_72)
#  Omit build script start

#
#   install
#
DEPS_73 = $(DEPS_73) installPrep
DEPS_73 = $(DEPS_73) stop
DEPS_73 = $(DEPS_73) installBinary
DEPS_73 = $(DEPS_73) start

install: $(DEPS_73)
#  Omit build script install

#
#   uninstall
#
DEPS_74 = $(DEPS_74) stop

uninstall: $(DEPS_74)
#  Omit build script uninstall

#
#   uninstallBinary
#

uninstallBinary: $(DEPS_75)
#  Omit build script uninstallBinary

#
#   version
#

version: $(DEPS_76)
	echo $(VERSION)

